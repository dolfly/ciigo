// Code generated by github.com/shuLhan/share/lib/memfs DO NOT EDIT.

package main

import (
	"github.com/shuLhan/share/lib/memfs"
)

func generate_() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "./_example",
		Path:            "/",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetName("/")
	node.SetSize(0)
	node.AddChild(_getNode("/LICENSE", generate__LICENSE))
	node.AddChild(_getNode("/custom.css", generate__custom_css))
	node.AddChild(_getNode("/favicon.ico", generate__favicon_ico))
	node.AddChild(_getNode("/html.tmpl", generate__html_tmpl))
	node.AddChild(_getNode("/index.css", generate__index_css))
	node.AddChild(_getNode("/index.html", generate__index_html))
	node.AddChild(_getNode("/sub", generate__sub))
	node.AddChild(_getNode("_example", generate__example))
	return node
}

func generate__LICENSE() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/LICENSE",
		Path:            "/LICENSE",
		ContentType:     "text/plain; charset=utf-8",
		ContentEncoding: "gzip",
		V:               []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x94\x95\x5F\x6F\xDB\x36\x17\xC6\xAF\x5F\x7E\x8A\x07\xBD\x6A\x01\xC5\xFD\xF3\x02\x03\x96\xDE\x8C\x96\xE8\x98\x98\x2C\x6A\x24\x15\xD7\x97\x8A\x45\xD7\xC4\x2C\xD1\xA0\xE8\x14\xFD\xF6\x03\x29\xA7\x71\x9D\x6C\xC3\x08\x04\x39\xB6\xCE\xEF\x9C\xE7\x3C\x3C\x86\x72\x77\xFC\xEE\xED\xD7\x7D\xC0\xA7\x0F\x1F\x7F\xB9\xF9\xF4\xE1\xE3\xAF\x19\x56\x33\xA8\xFD\xE9\xB0\x6F\x07\xBC\xED\xC7\xDF\xFE\xB4\x87\xF6\xC1\x86\x99\x1D\x76\xEE\xDD\x8C\xD0\xC3\x01\x09\x19\xE1\xCD\x68\xFC\xA3\xE9\x66\x84\x48\xD3\xD9\x31\x78\xFB\x70\x0A\xD6\x0D\x68\x87\x0E\xA7\xD1\xC0\x0E\x18\xDD\xC9\x6F\x4D\xFA\xE6\xC1\x0E\xAD\xFF\x8E\x9D\xF3\xFD\x98\xE1\x9B\x0D\x7B\x38\x9F\xFE\xBB\x53\x20\xBD\xEB\xEC\xCE\x6E\xDB\x58\x20\x43\xEB\x0D\x8E\xC6\xF7\x36\x04\xD3\xE1\xE8\xDD\xA3\xED\x4C\x87\xB0\x6F\x03\xC2\xDE\x60\xE7\x0E\x07\xF7\xCD\x0E\x5F\xB1\x75\x43\x67\x23\x34\x26\xA8\x37\xE1\x96\x90\x8F\x33\xFC\x2C\x69\x84\xDB\x3D\x69\xD9\xBA\xCE\xA0\x3F\x8D\x01\xDE\x84\xD6\x0E\xA9\x60\xFB\xE0\x1E\xE3\xA3\x27\x43\x06\x17\xEC\xD6\x64\x08\x7B\x3B\x12\x00\x07\x3B\x86\x58\xE3\xB2\xDD\xD0\x5D\x69\xE9\xEC\xB8\x3D\xB4\xB6\x37\x7E\x46\xC8\xA7\x97\x1A\xEC\x70\x69\xC2\x93\x86\xA3\x77\xDD\x69\x6B\xFE\x49\x46\x54\x10\x95\xFC\x57\x19\x38\x4F\xD7\xB9\xED\xA9\x37\x43\x48\xEE\xC6\x62\xED\xD0\xBD\x77\x1E\x2E\xEC\x8D\x47\xDF\x06\xE3\x6D\x7B\x18\x9F\x8D\x4E\xB7\x93\xC8\x8B\x01\x66\x84\xFC\x7F\x86\xCA\xD8\x44\xC5\xA7\x43\xDB\x9B\x49\xCE\x93\xE0\xBD\x3B\x74\xC6\x63\x70\xCF\x09\xC9\x7B\x1B\xC6\x28\x7A\xAA\xE5\xFC\x88\xBE\xFD\x1E\x85\x3C\x98\xB8\x29\x1D\x82\x83\x19\x3A\xE7\x47\x13\x97\xE2\xE8\x5D\xEF\x82\xC1\x64\x4D\x18\xD1\x19\x6F\x1F\x4D\x87\x9D\x77\xFD\xE4\xC4\xE8\x76\xE1\x5B\xBC\xF1\xA7\x05\x02\x30\x1E\xCD\x36\x2E\x11\x8E\xDE\xC6\xD5\xF2\x71\x7D\x86\x69\x91\xC6\x71\x9A\x40\x2F\xB9\x82\x12\x0B\xBD\xA6\x92\x81\x2B\xD4\x52\xDC\xF3\x82\x15\x98\x6F\xA0\x97\x0C\xB9\xA8\x37\x92\xDF\x2D\x35\x96\xA2\x2C\x98\x54\xA0\x55\x81\x5C\x54\x5A\xF2\x79\xA3\x85\x54\x78\x43\x15\xB8\x7A\x43\xE2\x03\x5A\x6D\xC0\xBE\xD4\x92\x29\x05\x21\xC1\x57\x75\xC9\x59\x81\x35\x95\x92\x56\x9A\x33\x95\x81\x57\x79\xD9\x14\xBC\xBA\xCB\x30\x6F\x34\x2A\xA1\x51\xF2\x15\xD7\xAC\x80\x16\x59\x6C\x4A\x5E\x62\x10\x0B\xAC\x98\xCC\x97\xB4\xD2\x74\xCE\x4B\xAE\x37\x49\xC8\x82\xEB\x2A\xF6\x5A\x08\x09\x8A\x9A\x4A\xCD\xF3\xA6\xA4\x12\x75\x23\x6B\xA1\x18\xA8\x64\xA4\xE0\x2A\x2F\x29\x5F\xB1\x62\x06\x5E\xA1\x12\x60\xF7\xAC\xD2\x50\x4B\x5A\x96\x7F\x33\xA5\x90\x3F\x0F\x39\x67\x28\x39\x9D\x97\x8C\xA4\x56\xD5\x06\x05\x97\x2C\xD7\x71\x9E\xE7\x28\xE7\x05\xAB\x34\x2D\x33\xA8\x9A\xE5\x3C\x06\xEC\x0B\x5B\xD5\x25\x95\x9B\xEC\x5C\x53\xB1\x3F\x1A\x56\x69\x4E\x4B\x52\xD0\x15\xBD\x63\x0A\x6F\xFF\xC5\x93\x5A\x8A\xBC\x91\x6C\x15\x45\x8B\x05\x54\x33\x57\x9A\xEB\x46\x33\xDC\x09\x51\x44\xB1\x44\x31\x79\xCF\x73\xA6\x3E\xA3\x14\x2A\xD9\xD5\x28\x96\xA1\xA0\x9A\xA6\xC6\xB5\x14\x0B\xAE\xD5\xE7\x18\xCF\x1B\xC5\x93\x6B\xBC\xD2\x4C\xCA\xA6\xD6\x5C\x54\xEF\xB0\x14\x6B\x76\xCF\x24\xC9\x69\xA3\x58\x91\xEC\x15\x55\x1A\x55\x2F\x99\x90\x9B\x58\x34\x7A\x90\xDC\xCF\xB0\x5E\x32\xBD\x64\x32\x3A\x9A\x9C\xA2\xD1\x02\xA5\x25\xCF\xF5\x45\x1A\x11\x12\x5A\x48\x7D\x31\x23\x2A\x76\x57\xF2\x3B\x56\xE5\x2C\xAA\x11\xB1\xCA\x9A\x2B\xF6\x0E\x54\x72\x15\x13\xF8\xD4\x76\x4D\x37\x10\x4D\x1A\x39\x5E\x52\xA3\x18\x49\xE1\xC5\xCA\x66\xE9\x2A\xC1\x17\xA0\xC5\x3D\x8F\xB2\xCF\xC9\xB5\x50\x8A\x9F\x17\x25\x59\x96\x2F\x31\xD9\x3D\x23\xF1\xC7\x91\xCE\xCD\xCD\xCD\x73\xF0\xE3\xC3\x6B\xD1\x39\x81\x90\xFF\x69\x0D\xC4\x3F\x70\x0E\xCC\xE7\xF8\x71\x28\xA5\x34\x05\x65\x3A\x53\xC2\xEF\xE7\x93\xB8\x84\x5D\x73\x11\x4A\x60\x44\xF0\xC4\x21\xA2\x11\x9A\x98\x2B\x68\x6A\xF4\x83\x7A\x01\xBD\xDA\x89\x9E\xCF\x95\xC2\x67\xE8\xB5\xB1\x9E\x3B\xBD\x2E\x0F\x13\x35\x41\xD3\xB9\x92\x77\xDD\x89\xAC\xCD\xC3\x68\x83\xB9\xC5\x3E\x84\xE3\xED\xFB\xF7\x97\xAF\x54\x92\xBB\x21\xB4\xDB\x70\x8B\xAB\x77\x2D\xF9\x2B\x00\x00\xFF\xFF\x6A\xEC\xBB\x57\x9D\x07\x00\x00"),
	}
	node.SetMode(420)
	node.SetName("LICENSE")
	node.SetSize(957)
	return node
}

func generate__custom_css() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/custom.css",
		Path:            "/custom.css",
		ContentType:     "text/css; charset=utf-8",
		ContentEncoding: "gzip",
		V:               []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\xCA\x30\x54\xA8\xE6\xE2\x4C\xCE\xCF\xC9\x2F\xB2\x52\x28\xCE\x4C\xCD\xCB\x4B\xB4\xE6\xAA\xE5\x02\x04\x00\x00\xFF\xFF\x1C\x35\x0D\x2C\x17\x00\x00\x00"),
	}
	node.SetMode(420)
	node.SetName("custom.css")
	node.SetSize(47)
	return node
}

func generate__favicon_ico() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/favicon.ico",
		Path:            "/favicon.ico",
		ContentType:     "image/x-icon",
		ContentEncoding: "gzip",
		V:               []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\xEC\x98\x0D\x4C\x55\x65\x18\xC7\x1F\xE0\x1A\x04\x85\x18\x9A\x5D\x4B\xEF\x69\xA6\x32\xE7\xDC\x2C\x95\x73\x67\x26\xAE\x9A\xB9\xE4\x5C\xF5\x9E\x13\x73\xE8\x6E\xE9\x0C\xD4\xCC\x12\xB8\x88\x9A\x62\x69\xCD\xCD\x4F\x30\x44\xCA\x89\xB9\x34\x5D\x4D\x14\x9C\x6B\x6A\xDD\x0B\x9B\x29\x61\x1A\xF3\x13\xF9\xF4\x8A\x22\x2E\x94\xE0\xF2\xE1\x85\xF7\xDF\xDE\x73\x3F\x52\xEE\x65\x92\x0B\x5B\xDB\xFD\x6F\xCF\x38\xCF\x39\xCF\xFB\xFC\xDE\x8F\xE7\x39\x67\x5C\xA2\x00\x0A\x24\x41\xE0\x7F\x05\xFA\x2E\x82\x68\x38\x11\x45\x44\x70\x3F\x84\x12\xFB\x10\xFD\x16\x41\x14\x45\x44\x02\x11\xC5\x90\x33\xEE\x61\x92\x25\x11\xDC\x58\x8D\xB9\x57\xCD\xCD\xF1\xF3\xFD\x7C\x3F\xDF\xCF\xF7\xF3\xFF\x9F\xFC\x32\xEB\x7C\x9C\xCC\x9B\xAD\x5A\xD5\xC9\xC4\xC7\xCE\xBF\x51\x73\x06\x8E\x0E\xA8\x76\xAD\xEC\xF8\x63\xE3\xB7\x95\x27\xE1\x46\xC9\x22\x34\xDE\xAD\xF7\xF0\x6F\xD5\x5E\xC2\xF5\xE2\x85\xEA\xB3\xDE\xE4\x3B\x2A\x53\xB0\x3F\xE7\x5D\x6C\xCB\x5C\x89\x6D\xBB\x8E\x22\x67\xAF\x15\x5F\xED\x2B\x44\xE6\xD7\x79\xC8\xCA\x5C\x8E\xBC\x5D\xA6\x5E\xE5\xB7\x95\xA7\xC1\xBC\xD1\x82\xE4\x0D\x45\x3E\x6D\xE5\xE6\xA3\xFF\x2E\xFF\xDA\x0A\xB0\x86\x43\x40\xEB\x15\xA0\xDD\x06\xD8\xCF\x22\x77\xFF\x11\x95\x65\x9C\xBB\x0E\xAF\xE8\xA7\x62\xDC\xAB\xD3\x30\x6B\xE1\x16\xF5\x5E\x5E\xC1\x61\xE0\xCF\x22\xA0\xE9\x34\x58\xC3\x41\x30\xDB\xEA\x47\xE7\x5F\x5F\x0B\xDC\xAB\x43\x57\x31\x00\x25\xC5\x27\xA0\x13\x86\x7A\x6C\x44\xD4\x48\x54\x54\x5E\xF2\x8A\x45\x67\x33\x58\x5D\xF6\x23\xF1\xD1\x56\xE9\x9D\xEF\x3E\xE5\x6E\x37\x63\xDA\x94\xB1\x98\xF1\xF6\x38\xE4\xFF\x90\xD3\x7D\x60\x67\x2B\xD8\xF5\x75\x3D\xE1\x37\xF1\xFB\x6D\xE5\xC9\x60\x75\x5F\x7A\xA5\x69\x69\x69\x81\xE9\xBD\x79\x88\x1A\x39\x1A\x2B\x3E\x59\x0D\xE6\xB8\x03\x56\x93\x0A\x76\x73\xAB\x57\xEC\xF9\xF3\x17\x10\x33\xF9\x0D\x8C\x79\x79\x3C\xF2\x0B\x8E\x00\x8D\x56\x57\xFD\x24\xBB\xF9\x4D\x3E\xF8\x65\xFC\xD9\xED\x73\x4B\xC0\x1A\xF2\xBD\x72\x6E\xCF\xCE\x41\xBF\xC8\x81\x1E\xB3\x16\x16\x81\xD5\x7E\xEE\xAC\x8F\x2E\x9A\x3E\x43\xF6\xC4\xE9\x5E\x1C\x86\x0E\x7B\x85\xCA\xAF\x3F\xB7\x44\xE5\x1B\x25\xF1\x4A\x57\xBE\x62\x88\x3E\xC8\x9F\x15\x1F\x99\x07\x76\xA7\xC0\x2B\x67\x56\x56\xF6\x03\x7C\x8B\xC5\x0A\x56\xFB\x85\x4F\xBE\x61\xBA\xD1\x13\x37\x44\x78\x09\x8E\xE6\x72\x95\x7F\x3A\x7F\xAE\x7B\xFD\x87\x1E\x5C\xBB\x5E\x89\x9B\xA9\x6F\xDE\xB2\x46\xC2\xB5\xD3\x1F\x80\xD5\x6D\xF7\xCA\x69\xB7\xDB\x11\x3F\xDB\x84\x61\xC3\x47\xC2\x9C\x9A\x06\xE6\x68\x74\xED\x7F\xA6\x57\xEC\xEF\xA5\xA5\x98\x30\x31\x06\xA3\x46\x8F\x41\x5E\x1E\xEF\x89\x42\x95\x7F\xD9\x92\x88\x65\x8B\xDF\xE4\xFC\x36\xD9\xA0\x4F\x50\xD9\xD3\xF4\xAF\xC7\x4D\xD7\xB3\xD2\x63\xEF\xE3\x8F\xD2\x8F\xD0\x51\x65\x46\x67\x35\xAF\xBF\x6A\x1F\xC5\xF4\xB7\xF8\x19\x79\x6A\x95\xF7\x67\x77\xEA\x6C\x73\x9E\x93\x2B\xB6\xF5\x6A\x12\xBE\xD9\x2A\xAB\xFB\xA0\x18\xC4\x38\x45\x12\x8F\x7D\x6A\x9E\x8A\xA6\xCB\x49\xD8\xB9\xD1\x88\x9D\x9B\x66\xA2\xA5\x2C\x09\x9D\x36\xDE\x7F\xF5\xBE\x73\x36\xFF\xEA\x5C\xBB\xBB\xAF\x6C\x6B\x7C\xCF\xB7\xB3\x05\xEC\x56\x0E\x58\xB5\x19\x17\x7F\x4A\x40\xF6\xFA\x19\x38\xB4\x6B\x16\xEC\x57\x92\x9C\x7C\x49\x3C\x27\x1B\xC4\xEA\x45\x73\x63\x70\xAF\x32\x19\xED\x15\x29\x9E\x73\xCA\xF8\x4C\x82\xFD\x6A\x9A\xB3\x16\x5A\x2B\x80\xF6\x5A\xC0\x5E\x0A\x56\x9F\xDB\xCD\xBB\x2D\x15\xEC\xF6\x1E\xA0\xE9\x17\xA0\xB9\xC4\xB9\x3F\xB6\x74\x95\xB5\x7B\xAB\x8C\x5B\x67\x3F\x54\xD7\xCE\xF7\xF8\x6A\xD1\x02\x77\x1D\xD8\x15\x29\xDA\xCA\xAF\x57\x2D\x9D\x82\xC3\xB9\xF1\xD8\xB0\x2A\xD6\xD3\xA3\x89\xA6\x49\xB0\x7C\x6F\x42\x3B\xEF\xC9\x7F\xF8\x9D\xE7\xBD\xC6\xC7\x26\x98\x26\xA9\xB9\xE6\x28\x13\xB0\x27\x43\xC1\x81\x1D\x71\x98\x3F\xE7\x35\x67\x1F\xC4\x8A\x17\xF9\xF9\xCB\x92\xD8\xE1\x66\x7A\xCC\x20\xDA\xDC\xD7\xA6\xB8\x09\xC8\x58\x6B\x40\xC1\xEE\x78\x9C\x3F\x91\x80\x9B\x67\x16\xA3\xF1\xE2\xC7\xEA\x9E\x71\xE3\xD7\xFC\x1E\x7F\xC6\x63\x78\x2C\x1F\xE3\x1E\xAF\x48\xFA\x72\xAF\xFC\x92\xC8\xF8\xF9\xAB\x35\x68\x18\x3F\x51\x36\xE8\x7F\x94\x25\xB1\x52\x91\xC4\x62\x45\x12\x17\x10\x51\xA0\x31\x56\x3F\xCB\x28\x89\x55\x3E\xC6\xF6\xC8\x8C\x92\x58\x6E\x8C\x15\xDF\xE1\xFF\x02\xCB\x92\x18\x2F\x4B\x62\x91\x2B\x9F\x45\x8E\x15\xA7\x76\x7D\x07\xF8\x92\xA2\x28\x41\x33\xA5\xE8\xC9\xB2\x41\xCC\x90\x0D\xE2\x71\x3E\x47\x59\x12\x1B\x5C\xE6\x66\x35\xBA\x7C\x9B\x33\x26\x7A\x33\x5F\x53\x7A\x3A\x05\xF6\x84\xF1\x5F\xCA\x42\x14\xD4\x5B\x96\x4E\x14\xE0\x8B\xC9\xEF\x83\x48\x6D\xD1\x28\x22\x8A\x70\xFD\x56\x11\x40\x21\xDD\xCE\xB3\x5F\xE4\x40\xD2\x09\x43\x69\xF4\xA8\x11\x14\x27\x8D\xE1\xDF\x0B\x4A\x99\x1F\x4D\xCB\x12\xC7\xD2\x8A\x24\x89\x0E\x64\xBC\x45\xDF\x66\xC8\x94\xBC\xA1\x88\x4E\xED\x93\x68\xD3\x8E\xBD\xB4\x77\xCF\x7A\x3A\x95\xBF\x94\x0A\x0F\x2F\xA7\xB3\xC7\xD2\xA8\xF8\xE7\xCD\x54\x62\xCD\xA2\xA6\x0B\xC9\x84\x8A\x54\x42\x15\xB7\x65\x84\x9A\x14\x42\x75\x1A\xB1\x1A\x33\xDD\xAC\x29\x25\x7B\x8B\x83\x5A\xEF\x81\x1C\x1D\x20\x07\x03\x9F\x68\x6F\x1E\x81\x5F\x7E\xF9\xF5\x10\x09\x1A\xED\x7D\xD2\x08\xBD\xE4\x47\xF4\xD5\x0E\xE8\xDF\xDF\xED\x3F\x17\x3A\x78\x70\xA8\xD6\xED\x0F\xD0\x6A\x9F\x0E\x0D\x7D\x4A\x3B\xF0\x59\xA7\x1F\xA9\xD3\x85\x07\x04\x84\xEB\x74\x91\x4E\x7F\xD0\x10\x0A\xD4\x6A\x07\x0D\xA6\x40\xAD\x46\xD0\x3C\x11\x36\x48\xA7\xFA\x3A\x0A\x0C\xEB\xA3\xD1\x84\x85\x84\x3F\xFF\x42\xB8\x56\x1B\xAE\xD3\x85\x87\x84\x69\x04\x4D\x70\x48\x58\x18\x47\x3E\xD3\xEF\xC9\x60\x8D\xC0\x15\x1C\x1C\xA4\xD1\x04\x05\x07\x0B\x3E\x94\x1E\x40\xD4\x53\x73\x8B\x5F\xDF\xED\xCB\x5F\xB4\x44\x7F\x05\x00\x00\xFF\xFF\xF7\x87\x31\xC7\x36\x16\x00\x00"),
	}
	node.SetMode(420)
	node.SetName("favicon.ico")
	node.SetSize(1316)
	return node
}

func generate__html_tmpl() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/html.tmpl",
		Path:            "/html.tmpl",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "gzip",
		V:               []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x8C\x54\x4F\x6F\xDC\x2E\x10\x3D\x6F\x3E\x05\xE1\x77\xFD\x61\x14\x55\x55\xAB\x16\xAF\x94\x7F\xE7\x46\x4A\x2E\x3D\x55\xD8\x9E\x5D\x50\x31\x38\x30\xDE\xC4\x42\xEE\x67\xAF\x30\xF6\xD6\xD9\xAE\xD4\x9C\x0C\xBC\x79\x8F\xF7\xC6\x63\x8B\xCB\xBB\x6F\xB7\x4F\xDF\x1F\xEE\x89\xC2\xD6\x6C\x2F\x44\x7E\x6C\x84\x02\xD9\x6C\x2F\x36\x1B\xD1\x02\x4A\xA2\x10\x3B\x06\xCF\xBD\x3E\x94\xF4\xD6\x59\x04\x8B\xEC\x69\xE8\x80\x92\x3A\xEF\x4A\x8A\xF0\x8A\x3C\xB1\xBF\x92\x5A\x49\x1F\x00\xCB\x1E\x77\xEC\x33\x25\xFC\x8F\x8E\x95\x2D\x94\xF4\xA0\xE1\xA5\x73\x1E\x57\xEC\x17\xDD\xA0\x2A\x1B\x38\xE8\x1A\xD8\xB4\xF9\x9F\x68\xAB\x51\x4B\xC3\x42\x2D\x0D\x94\x57\x67\x84\x50\x41\x0B\xAC\x76\xC6\xF9\x95\xD6\x7F\x1F\x3E\x7D\xBC\xBF\xBE\x99\xEA\x13\x01\x35\x1A\xD8\xC6\x58\x3C\xA5\xC5\x38\x0A\x9E\x4F\x12\x66\xB4\xFD\x49\x3C\x98\x92\x06\x1C\x0C\x04\x05\x80\x94\x28\x0F\xBB\x92\x72\x6D\x1B\x78\x2D\xEA\x10\xE6\xAB\x63\x64\xC4\x4B\xBB\x07\x52\x3C\x4E\xD5\xE3\xF8\x2F\x8D\x18\x8B\x71\x5C\xD1\xC1\x36\x89\x24\xF8\xDC\x5F\x51\xB9\x66\x98\x9C\x34\xFA\x40\x6A\x23\x43\x28\x29\xBA\xAE\x92\x9E\xA6\xE3\x37\xE7\x29\xA1\xD4\x16\x66\xE8\x94\xC3\x92\xA6\xB6\xFB\x19\xDD\x08\xB9\x04\xA1\xDB\x5A\xEB\xBD\x13\x5C\xCE\x44\xDE\xE8\xC3\xDF\x1A\x2D\xD8\xFE\x48\xDE\x39\xDF\x2E\x80\x46\x68\x29\x91\x35\x6A\x67\x4B\xCA\x7F\x68\x8B\xE0\xAD\x34\x3C\x80\xF4\xB5\x5A\x38\x1B\xA1\x6D\xD7\x23\xC1\xA1\x83\x3C\x10\x74\x7E\x51\xCF\x94\x74\x46\xD6\xA0\x9C\x69\xC0\x97\xF4\x31\xF3\x72\x5F\x26\x43\xE9\xBA\xF7\x9B\x3B\x26\x0B\x7D\x45\xB7\x8F\x7D\x75\x26\xDA\x71\x35\x2F\x4E\x9A\xDC\xC9\x3D\xBC\xA3\xC5\xEA\xEA\xCD\xE4\xA8\xAB\x73\xCE\x50\x2E\xCE\x62\x2C\xAE\x7B\x54\xCE\x4F\xA3\x91\x0A\x2B\x7F\x4C\x19\x63\x71\x27\x11\x66\x68\x95\x33\xC6\xE2\xC6\x35\x43\x06\x56\x09\x2E\x19\x23\xC5\xD1\x12\x61\x6C\x15\x67\x81\x53\x8E\x09\x39\xC9\xB7\x73\x0E\x97\x18\x0F\xEE\x05\x3C\x34\xA4\x1A\x88\x90\xD3\x8D\xB9\x7D\xE9\xB3\x0E\x5F\x38\x0F\xBE\x50\xC8\x7F\x05\xD5\x1B\x25\x2D\x9F\x86\x85\xA6\xBA\x6C\x6F\xDA\x67\x6B\x72\xED\x40\xF0\x3C\xBD\x82\xE7\xBF\xC6\xEF\x00\x00\x00\xFF\xFF\x8E\x58\xE3\x81\x4D\x04\x00\x00"),
	}
	node.SetMode(420)
	node.SetName("html.tmpl")
	node.SetSize(517)
	return node
}

func generate__index_css() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/index.css",
		Path:            "/index.css",
		ContentType:     "text/css; charset=utf-8",
		ContentEncoding: "gzip",
		V:               []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x94\x55\x5D\x8F\xAB\x36\x14\x7C\x8E\x7F\xC5\x91\x56\x7D\x89\x80\x05\xB2\x24\x2D\x48\x2B\x55\x7D\xEE\x8F\x30\xF8\x10\xAC\x35\x36\x32\xA6\xC9\xF6\x2A\xFF\xFD\xCA\x60\xBE\x02\xB9\xD2\x15\x0F\x89\xEC\xB1\xCF\x78\xE6\x78\x9C\x2B\xF6\x0D\x3F\xC8\xA1\xA6\xFA\xCA\x65\x0A\x61\x46\x0E\xA5\x92\xC6\x2F\x69\xCD\xC5\x77\x0A\x7F\x6B\x4E\x85\x07\x2D\x95\xAD\xDF\xA2\xE6\x65\x46\x0E\x39\x2D\xBE\xAE\x5A\x75\x92\xF9\x85\x12\x4A\xA7\xF0\x56\x96\x76\x42\x70\x89\x7E\x85\xFC\x5A\x99\x14\xA2\xE0\x94\x91\x83\xC1\xBB\xF1\xA9\xE0\x57\x99\x42\x81\xD2\xA0\xCE\xC8\x61\x5C\x15\xC7\x71\x46\x1E\xA4\xD1\x68\x39\xAC\xEA\xFE\x8B\x52\x28\x0F\x6A\x25\x55\xDB\xD0\x02\x47\x5E\x2D\xFF\x1F\x53\x08\x83\x3F\x2F\x89\xC6\x7A\x5B\xF3\x23\x23\x07\xF5\x1F\xEA\x52\xA8\x9B\x7F\x4F\x81\x76\x46\xAD\x28\xA7\xF0\x86\xA5\xFD\x32\x72\x68\x28\x63\x5C\x5E\xED\x7E\xE7\xD8\xED\x97\x2B\xCD\x50\xFB\x9A\x32\xDE\xB5\x76\xE6\x14\xB9\xA9\x07\xA1\x96\xE6\x48\xFE\x74\x49\x90\xE6\xE3\x11\x19\x16\x4A\x53\xC3\x95\x4C\x41\x2A\x89\x3D\x3C\xAD\x2C\x15\xBB\x68\x83\xE9\x24\x43\x6D\xB9\x5B\x20\x69\x3C\x22\xF8\xE0\xC3\xDD\xBF\x71\x66\xAA\x14\x92\x70\x20\x74\x53\x9A\xF9\x37\x4D\x9B\x14\x72\x8D\xF4\xCB\xB7\x03\xBD\x6C\x9E\x55\xCE\x23\x9D\xF0\x88\x12\x4B\x17\xA3\x60\xA2\x4C\xAA\xC8\x23\x55\xEC\x91\xEA\xE4\x91\xEA\x63\x07\x05\xE1\x8C\x5F\x28\x92\xED\x9C\xB4\x77\xE0\xE6\xB4\xCE\x95\xE8\x69\x54\xD1\x64\xDE\x60\x4E\x14\xEC\x7B\xE3\xC0\x41\xAF\x45\xDD\x19\x64\x4B\x39\x2F\x97\x4B\x0F\x88\xFB\x41\x81\x54\xA7\xA0\xED\xCA\xEC\x69\xF3\xC9\xA8\x95\xA5\x21\xE6\x65\xB2\xB6\x74\xBF\x41\xE2\xE4\xF9\x20\x52\xE9\x9A\x8A\x45\xDF\x4C\x5D\x33\x35\xD2\x9E\xFC\x55\x0C\x74\x3A\xF9\x46\x94\xD3\x46\x94\xF8\x17\x7C\x7E\xB3\xF2\x6B\x2B\x97\xDD\x3A\x40\x96\x1C\xA6\x9E\x88\xE1\x13\xDA\x86\x4A\xDB\x16\xEE\x6F\x8F\x15\x8A\x9A\x59\xF6\x29\x14\x20\x4E\x9A\x3B\x84\x73\x3A\x6C\xA4\x1B\x5D\x4C\xE2\xCB\x5F\x45\x6F\x24\x61\xAF\x5A\x92\xB1\x55\xE2\xF4\xDF\x72\x5A\x78\x0E\xB2\x7B\xE1\x1F\x84\xBC\x1F\x8F\x04\x8E\xF0\x4F\xD7\x1A\x55\x43\x21\x68\xDB\x62\x0B\xA5\xD2\xD0\xD0\x2B\xB6\x04\x8E\xEF\x84\x04\x46\x35\x39\xED\x2F\xDF\x7E\xA7\x8C\x16\x7C\x0C\xB6\xCC\x16\x54\x9C\x31\x94\x7D\xA5\x71\x13\xFB\xEB\x57\x48\x6D\x6B\x79\xF3\x68\x8D\xB2\xB3\x05\xA6\xA6\x8B\x82\x53\x74\xEA\x8D\x78\xD5\xB5\xBB\xF2\xBD\xA8\xB4\xB0\x44\x60\x69\x2C\x6E\x17\xB6\x8A\xA5\x3E\x53\x5F\x67\xD2\x96\xFC\xDA\xF4\xC7\x13\x80\xAE\xBC\x72\x31\x09\x61\x10\x6D\x13\x63\xCE\x50\xC7\xE5\x56\x71\x83\xCF\x37\x75\x0A\x93\x21\x68\xED\xBA\xD0\xED\xDA\x2A\xC1\xD9\x06\x31\x45\x71\xD2\xDC\xB7\xFC\x4A\xA5\xEB\x99\xA2\x6F\x75\x5A\x52\x79\x90\xC0\xF6\x84\x45\xB8\x58\x8D\xC2\xF0\x8F\x41\x88\x7E\xE2\x13\x82\x42\x49\x43\xB9\x44\x3D\x3B\xBB\x1C\x9D\xE2\xDB\xBD\x62\x83\x15\xEB\x82\xEE\xD6\xBA\x31\x3D\xB8\xEB\x06\x67\x81\x56\xB9\xBC\x28\x10\xD4\x68\xE6\x28\x69\xCD\xB7\xC0\x14\xB8\xA1\x82\x17\xD9\x7E\xA8\x07\xA5\x52\x66\x4B\x6D\xF3\xC0\x9E\xCF\xE7\x97\x0F\xE7\xB8\x6F\x1C\x24\xAE\x63\x1F\xE4\x67\x00\x00\x00\xFF\xFF\x2F\x17\x7F\x31\x0F\x08\x00\x00"),
	}
	node.SetMode(420)
	node.SetName("index.css")
	node.SetSize(739)
	return node
}

func generate__index_html() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/index.html",
		Path:            "/index.html",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "gzip",
		V:               []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\xA4\x56\xDF\x6F\x1B\x37\x0C\x7E\xB6\xFF\x0A\x4E\x03\xF6\x94\xB3\x92\x0C\x45\xD7\xF5\xEE\x86\x2D\xED\xBA\x01\x1D\x56\x20\x01\x86\x3D\x05\xB4\x44\x9F\x84\xE8\xA4\x8B\xC4\xB3\xEB\x97\xFD\xED\x83\xEE\x87\x93\x38\x46\x11\xB4\x4F\x27\x51\x22\xC5\xEF\xE3\x47\xDA\xE5\x77\xEF\xFE\xBE\xBA\xF9\xF7\xD3\x7B\x30\xDC\xBA\x7A\x59\x8E\x9F\x45\x69\x08\x75\xBD\x5C\x2C\xCA\x96\x18\xC1\x30\x77\x05\xDD\xF7\x76\x5B\x89\xAB\xE0\x99\x3C\x17\x37\xFB\x8E\x04\xA8\x71\x57\x09\xA6\xCF\x2C\xB3\xF7\x5B\x50\x06\x63\x22\xAE\x7A\xDE\x14\x3F\x09\x90\x0F\x71\x3C\xB6\x54\x89\xAD\xA5\x5D\x17\x22\x3F\xF2\xDE\x59\xCD\xA6\xD2\xB4\xB5\x8A\x8A\x61\x73\x06\xD6\x5B\xB6\xE8\x8A\xA4\xD0\x51\x75\x71\x22\x10\x1B\x6A\xA9\x50\xC1\x85\xF8\x28\xD6\xF7\x3F\xBE\x7E\xF5\xFE\xD7\xDF\x86\xFB\xD9\x81\x2D\x3B\xAA\xFF\x21\xA7\x42\x4B\xC0\x01\x94\xB5\x4D\x28\xE5\x68\xCF\x37\x9C\xF5\x77\x10\xC9\x55\x22\xF1\xDE\x51\x32\x44\x2C\xC0\x44\xDA\x54\x42\x5A\xAF\xE9\xF3\x4A\xA5\x34\x26\x50\xCA\x89\x9A\x72\x1D\xF4\x7E\x70\xD7\x76\x0B\xCA\x61\x4A\x95\xE0\xD0\xAD\x31\x8A\x6C\x7E\x62\xCF\xC9\xA1\xF5\x34\x1D\x1D\xFB\x14\x39\xA6\xF5\xCD\x74\xBA\x28\x71\x7E\x5D\xD4\x53\xB6\x38\x39\x4A\x6D\xB7\xCF\x63\xB4\xE4\xFB\x83\xF3\x26\xC4\x76\x3E\xB0\x4C\xAD\x00\x54\x6C\x83\xAF\x84\xBC\xB5\x9E\x29\x7A\x74\x32\x11\x46\x65\x66\x9F\x45\x69\x7D\xD7\x33\xF0\xBE\xA3\xB1\x96\x62\xE2\xF8\x5E\x40\xE7\x50\x91\x09\x4E\x53\xAC\xC4\xF5\xE8\x37\x16\x63\x48\x28\x3F\xF7\xF2\xE4\x0E\xC8\x52\xBF\x16\xF5\x75\xBF\x3E\x01\xED\xB0\x9A\x16\x47\x24\x77\xD8\xD0\x0B\x28\x36\x17\x27\x8A\x6E\x2E\x4E\xE5\xC7\x38\xE7\x77\x6D\x7A\x67\xD0\x4F\xC9\xAE\xE3\x01\xE7\xE5\x2B\xB8\xA6\x8E\xA9\x5D\x53\x84\xCB\xF3\x8B\x37\xC7\x88\x97\x43\x48\xAB\xC7\x4C\xC8\xB3\xA8\x1F\x4C\x5D\x24\x6C\xD7\x8E\x66\xDB\xF4\x72\xA2\xA1\x30\x59\x49\x47\x27\x1D\x46\x6C\x22\x76\xB9\x42\x65\x57\x97\xA9\x43\x7F\xA8\x69\x3B\x10\x50\xE2\x53\xC3\x44\x6C\xEE\xD5\xF4\xB3\x94\xDD\x5D\xB3\x6A\xC2\x4A\xD3\x56\x36\x96\x57\x29\xAE\x0C\xCB\xFF\xD2\x88\x4F\x0E\x74\x88\xBA\xB4\x6D\x03\x29\xAA\x07\x37\xDB\x36\xAB\x64\x2C\x39\x9D\x56\x36\xC8\x35\xEA\x86\xE4\x18\xA7\x88\xB4\xA1\x48\x5E\x51\x71\x7E\xFE\x5A\xBF\x51\xBF\xB8\xD0\x84\xAA\x09\x3F\x60\xDB\xBD\xCD\xEB\xAB\xDC\x8A\xD5\xCE\x58\xA6\xC1\x36\xB4\x53\xB5\x71\xC8\x45\xBA\xEF\x31\x92\x00\x74\x5C\x89\x0F\xE1\x5D\x50\xA2\xCE\xA5\x2F\x65\x86\x56\x97\xB2\xAB\x97\x13\x9B\x5F\xE2\x41\x05\x4D\x73\x4B\x0C\x6B\xB0\x09\x10\x9C\x5D\x47\x8C\x7B\x40\xAF\x01\xA1\x8B\xA1\x89\xD8\xE6\xB2\xEF\xA2\x65\x82\xC4\xC8\x56\xC1\x8E\xD6\x90\x28\x6E\x29\xC2\xCE\xB2\x81\x5C\x4C\xAD\x49\x2F\x37\xD6\x51\x82\x3E\x59\xDF\x2C\x0F\x0A\x9D\x19\xC1\xA4\xAC\xD5\x41\x71\x88\xAB\x10\x1B\xA9\x83\x4A\x72\x67\x90\x0B\x9B\x8A\xF9\x50\x8A\x7A\x5E\x0E\x82\x6E\x31\xDE\xF5\x1D\xE4\xDE\x40\x5E\x3D\x41\xF7\xF4\x73\xA4\x86\x8B\x8C\xD3\x5C\x0E\xA2\xB9\x1D\x70\xDE\x62\xBA\x9D\xE0\x4D\xC3\x00\x30\xCD\x80\x4B\x69\x2E\xBF\x52\x52\xBF\x87\x08\xE8\xA1\xEF\x32\x4D\x1A\x99\x40\x07\xD5\xB7\xE4\x33\x57\xC1\x43\xD8\x80\x09\xBB\x7C\xD8\x27\x02\x36\x74\x20\x39\xD1\xB0\x7F\xCE\xD4\x8B\x24\xF7\x21\x1C\x3D\x94\xDB\x39\x73\xF6\xCD\x2C\x29\x67\x1F\x31\x74\xF5\xF1\xCF\x6F\x60\xE7\x84\xD0\xC6\x98\xA0\x72\x23\x06\xBF\xA5\xC8\x67\xD0\x90\xA7\x88\x4C\x67\x59\x79\x32\xC4\x51\x5E\x80\xA0\x6D\xA4\xAC\x98\x3D\xB0\x41\x86\x69\x38\xA5\x83\x2E\xB2\xE0\xCE\x72\xC8\x3F\x6E\xFE\xFA\x38\x6E\xBF\x84\xFF\xF9\x68\x5C\x2C\x1F\x6D\x8E\x27\xE4\x26\x04\x9E\x07\xE1\xA7\xB0\xA3\x48\x1A\xD6\x7B\x28\x71\x98\x54\x4F\x8B\x76\xB2\x4A\xF9\xDE\x38\xD6\x86\xFD\xF8\x32\x3E\x1A\xC9\x8B\x52\x8E\xBF\x7F\xA5\x1C\xFF\x32\xFC\x1F\x00\x00\xFF\xFF\xD3\xBC\x88\x31\x4A\x08\x00\x00"),
	}
	node.SetMode(420)
	node.SetName("index.html")
	node.SetSize(889)
	return node
}

func generate__sub() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/sub",
		Path:            "/sub",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetName("sub")
	node.SetSize(0)
	node.AddChild(_getNode("/sub/index.html", generate__sub_index_html))
	return node
}

func generate__sub_index_html() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/sub/index.html",
		Path:            "/sub/index.html",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "gzip",
		V:               []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x8C\x54\xCB\x6E\xDB\x3A\x10\x5D\xDB\x5F\xC1\xCB\x00\x77\x55\x85\x72\x9C\x34\x6D\x42\x09\x68\xD3\xAC\x1B\x20\xD9\x74\x55\x50\xD2\xD8\x1C\x94\x22\x19\x72\xE4\xC4\x9B\x7E\x7B\x21\x51\xB2\x1D\xD7\x28\xB2\x22\xE7\x71\xE6\x75\x86\x94\xFF\x7D\xFB\x7E\xF7\xF4\xE3\xE1\x9E\x69\x6A\x4D\x39\x97\xE9\x98\x49\x0D\xAA\x29\xE7\xB3\x99\x6C\x81\x14\xD3\x44\x3E\x83\xE7\x0E\x37\x05\xBF\x73\x96\xC0\x52\xF6\xB4\xF5\xC0\x59\x9D\xA4\x82\x13\xBC\x92\xE8\xD1\xB7\xAC\xD6\x2A\x44\xA0\xA2\xA3\x55\xF6\x89\x33\xB1\x8F\x63\x55\x0B\x05\xDF\x20\xBC\x78\x17\xE8\x00\xFD\x82\x0D\xE9\xA2\x81\x0D\xD6\x90\x0D\xC2\x07\x86\x16\x09\x95\xC9\x62\xAD\x0C\x14\x8B\x13\x81\x48\x43\x0B\x59\xED\x8C\x0B\x07\xB1\xCE\x96\xD7\x57\xF7\x5F\xBE\x0E\xFE\x3D\x80\x90\x0C\x94\x8F\x5D\xC5\x1A\x0C\x50\x93\x0B\x5B\x29\x92\xB2\x37\x1B\xB4\xBF\x58\x00\x53\xF0\x48\x5B\x03\x51\x03\x10\x67\x3A\xC0\xAA\xE0\x02\x6D\x03\xAF\xE7\x75\x8C\x53\xF6\x7F\x7A\xD7\x5D\x24\xD7\xEE\xDD\xA5\x18\xC7\x28\x2B\xD7\x6C\x07\x7C\x83\x1B\x56\x1B\x15\x63\xC1\xC9\xF9\x4A\x05\xDE\xAB\xDF\xE8\xFB\x46\x14\x5A\x18\x4D\xC7\x98\xAC\x8F\x89\x76\x3D\x5A\x67\x52\x4D\xE9\x79\x59\x23\xAE\x9D\x14\x6A\x04\x8A\x06\x37\x7F\xC7\x68\xC1\x76\x3B\xF0\xCA\x85\x76\x32\x20\x41\xCB\x99\xAA\x09\x9D\x2D\xB8\xF8\x89\x96\x20\x58\x65\x44\x04\x15\x6A\x3D\x61\x66\x12\xAD\xEF\x88\xD1\xD6\x43\xE2\x9D\x8F\x7C\x3C\x73\xE6\x8D\xAA\x41\x3B\xD3\x40\x28\xF8\x63\xC2\xA5\xD1\x0D\x05\xF5\xE9\xDE\x5F\xDC\xAE\xB3\xD8\x55\xBC\x67\xF0\x44\x6B\xBB\xDB\x78\x39\x1A\xB2\x57\x6B\x78\xC7\x88\xF5\xE2\x78\x41\xF4\xE2\x54\x71\xA4\xA6\xE2\xC6\x12\xAB\xB0\xEB\xEE\x22\xBF\xC8\xB3\xFC\x63\x96\x5F\xB1\xC5\xF2\x66\x71\x79\xB3\xFC\xCC\xFE\x3F\xBB\x5C\xDE\xE6\xD7\x79\x7E\xDC\xF3\x7C\x88\x8B\x4D\xAA\x05\x2C\xF1\x72\xAF\xF2\x01\x54\x5B\x19\x98\x74\x63\xFA\x08\x03\x35\xFD\x2E\x1D\x59\xBC\x0A\x6A\x1D\x94\xEF\x39\x92\xBE\x7C\xD2\x18\x19\x46\xA6\x2C\x83\x57\xD5\x7A\x03\xCC\xAD\xA6\x07\xC2\xD0\xB2\x78\xD8\x2B\xEB\x22\xDA\x35\x4B\xCB\xCB\xF6\x6B\x7D\x2E\x85\x2F\xE7\x63\xCD\x27\x8F\x37\x2D\xCD\x0F\x84\x63\x16\x56\xCE\xD1\x34\xEC\x07\xF7\x02\x01\x1A\x56\x6D\x99\x54\xC3\x2C\x12\xC9\xFD\x1F\x13\x6F\x84\x88\xE1\x5C\x93\xF8\x1D\x75\x67\xB4\xB2\x62\x58\x69\xDE\xFB\xA5\xC1\x0D\x72\xCA\xAC\x0E\x68\x9F\x49\x91\xDE\x98\x14\xE9\x0B\xFB\x13\x00\x00\xFF\xFF\x8E\x98\x96\xBC\xDA\x04\x00\x00"),
	}
	node.SetMode(420)
	node.SetName("index.html")
	node.SetSize(573)
	return node
}

func generate__example() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example",
		Path:            "_example",
		ContentType:     "",
		ContentEncoding: "",
	}
	node.SetMode(2147484141)
	node.SetName("_example")
	node.SetSize(0)
	node.AddChild(_getNode("_example/html.tmpl", generate__example_html_tmpl))
	return node
}

func generate__example_html_tmpl() *memfs.Node {
	node := &memfs.Node{
		SysPath:         "_example/html.tmpl",
		Path:            "_example/html.tmpl",
		ContentType:     "text/html; charset=utf-8",
		ContentEncoding: "gzip",
		V:               []byte("\x1F\x8B\x08\x00\x00\x00\x00\x00\x00\xFF\x8C\x54\x4F\x6F\xDC\x2E\x10\x3D\x6F\x3E\x05\xE1\x77\xFD\x61\x14\x55\x55\xAB\x16\xAF\x94\x7F\xE7\x46\x4A\x2E\x3D\x55\xD8\x9E\x5D\x50\x31\x38\x30\xDE\xC4\x42\xEE\x67\xAF\x30\xF6\xD6\xD9\xAE\xD4\x9C\x0C\xBC\x79\x8F\xF7\xC6\x63\x8B\xCB\xBB\x6F\xB7\x4F\xDF\x1F\xEE\x89\xC2\xD6\x6C\x2F\x44\x7E\x6C\x84\x02\xD9\x6C\x2F\x36\x1B\xD1\x02\x4A\xA2\x10\x3B\x06\xCF\xBD\x3E\x94\xF4\xD6\x59\x04\x8B\xEC\x69\xE8\x80\x92\x3A\xEF\x4A\x8A\xF0\x8A\x3C\xB1\xBF\x92\x5A\x49\x1F\x00\xCB\x1E\x77\xEC\x33\x25\xFC\x8F\x8E\x95\x2D\x94\xF4\xA0\xE1\xA5\x73\x1E\x57\xEC\x17\xDD\xA0\x2A\x1B\x38\xE8\x1A\xD8\xB4\xF9\x9F\x68\xAB\x51\x4B\xC3\x42\x2D\x0D\x94\x57\x67\x84\x50\x41\x0B\xAC\x76\xC6\xF9\x95\xD6\x7F\x1F\x3E\x7D\xBC\xBF\xBE\x99\xEA\x13\x01\x35\x1A\xD8\xC6\x58\x3C\xA5\xC5\x38\x0A\x9E\x4F\x12\x66\xB4\xFD\x49\x3C\x98\x92\x06\x1C\x0C\x04\x05\x80\x94\x28\x0F\xBB\x92\x72\x6D\x1B\x78\x2D\xEA\x10\xE6\xAB\x63\x64\xC4\x4B\xBB\x07\x52\x3C\x4E\xD5\xE3\xF8\x2F\x8D\x18\x8B\x71\x5C\xD1\xC1\x36\x89\x24\xF8\xDC\x5F\x51\xB9\x66\x98\x9C\x34\xFA\x40\x6A\x23\x43\x28\x29\xBA\xAE\x92\x9E\xA6\xE3\x37\xE7\x29\xA1\xD4\x16\x66\xE8\x94\xC3\x92\xA6\xB6\xFB\x19\xDD\x08\xB9\x04\xA1\xDB\x5A\xEB\xBD\x13\x5C\xCE\x44\xDE\xE8\xC3\xDF\x1A\x2D\xD8\xFE\x48\xDE\x39\xDF\x2E\x80\x46\x68\x29\x91\x35\x6A\x67\x4B\xCA\x7F\x68\x8B\xE0\xAD\x34\x3C\x80\xF4\xB5\x5A\x38\x1B\xA1\x6D\xD7\x23\xC1\xA1\x83\x3C\x10\x74\x7E\x51\xCF\x94\x74\x46\xD6\xA0\x9C\x69\xC0\x97\xF4\x31\xF3\x72\x5F\x26\x43\xE9\xBA\xF7\x9B\x3B\x26\x0B\x7D\x45\xB7\x8F\x7D\x75\x26\xDA\x71\x35\x2F\x4E\x9A\xDC\xC9\x3D\xBC\xA3\xC5\xEA\xEA\xCD\xE4\xA8\xAB\x73\xCE\x50\x2E\xCE\x62\x2C\xAE\x7B\x54\xCE\x4F\xA3\x91\x0A\x2B\x7F\x4C\x19\x63\x71\x27\x11\x66\x68\x95\x33\xC6\xE2\xC6\x35\x43\x06\x56\x09\x2E\x19\x23\xC5\xD1\x12\x61\x6C\x15\x67\x81\x53\x8E\x09\x39\xC9\xB7\x73\x0E\x97\x18\x0F\xEE\x05\x3C\x34\xA4\x1A\x88\x90\xD3\x8D\xB9\x7D\xE9\xB3\x0E\x5F\x38\x0F\xBE\x50\xC8\x7F\x05\xD5\x1B\x25\x2D\x9F\x86\x85\xA6\xBA\x6C\x6F\xDA\x67\x6B\x72\xED\x40\xF0\x3C\xBD\x82\xE7\xBF\xC6\xEF\x00\x00\x00\xFF\xFF\x8E\x58\xE3\x81\x4D\x04\x00\x00"),
	}
	node.SetMode(420)
	node.SetName("html.tmpl")
	node.SetSize(517)
	return node
}

//
// _getNode is internal function to minimize duplicate node created on
// Node.AddChild() and on GeneratedPathNode.Set().
//
func _getNode(path string, fn func() *memfs.Node) *memfs.Node {
	node := memfs.GeneratedPathNode.Get(path)
	if node != nil {
		return node
	}
	return fn()
}

func init() {
	memfs.GeneratedPathNode = memfs.NewPathNode()
	memfs.GeneratedPathNode.Set("/",
		_getNode("/", generate_))
	memfs.GeneratedPathNode.Set("/LICENSE",
		_getNode("/LICENSE", generate__LICENSE))
	memfs.GeneratedPathNode.Set("/custom.css",
		_getNode("/custom.css", generate__custom_css))
	memfs.GeneratedPathNode.Set("/favicon.ico",
		_getNode("/favicon.ico", generate__favicon_ico))
	memfs.GeneratedPathNode.Set("/html.tmpl",
		_getNode("/html.tmpl", generate__html_tmpl))
	memfs.GeneratedPathNode.Set("/index.css",
		_getNode("/index.css", generate__index_css))
	memfs.GeneratedPathNode.Set("/index.html",
		_getNode("/index.html", generate__index_html))
	memfs.GeneratedPathNode.Set("/sub",
		_getNode("/sub", generate__sub))
	memfs.GeneratedPathNode.Set("/sub/index.html",
		_getNode("/sub/index.html", generate__sub_index_html))
	memfs.GeneratedPathNode.Set("_example",
		_getNode("_example", generate__example))
	memfs.GeneratedPathNode.Set("_example/html.tmpl",
		_getNode("_example/html.tmpl", generate__example_html_tmpl))
}
